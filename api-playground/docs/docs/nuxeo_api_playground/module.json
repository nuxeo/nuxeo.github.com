{"name":"module","qualifiedName":"nuxeo_api_playground/module","comment":"","variables":{},"functions":{"setters":{},"getters":{},"constructors":{},"operators":{},"methods":{}},"classes":{"class":[{"name":"Module","qualifiedName":"nuxeo_api_playground/module.Module","preview":"<p><a>nuxeo_api_playground/module.Module</a> acts as the model for a given <a>nuxeo_api_playground/module.NXModule</a>\nThere is a single instance of <a>nuxeo_api_playground/module.Module</a> but multiple <a>nuxeo_api_playground/module.NXModule</a> instances\nData stored in <a>nuxeo_api_playground/module.Module</a> will persist when creating/detroying <a>nuxeo_api_playground/module.NXModule</a> elements.</p>"},{"name":"NXElement","qualifiedName":"nuxeo_api_playground/module.NXElement","preview":"<p>An element which requires a Nuxeo connection</p>"},{"name":"NXModule","qualifiedName":"nuxeo_api_playground/module.NXModule","preview":"<p>Base class for API Playground modules.</p>"},{"name":"Routable","qualifiedName":"nuxeo_api_playground/module.Routable"},{"name":"Route","qualifiedName":"nuxeo_api_playground/module.Route","preview":"<p><a>nuxeo_api_playground/module.Route</a> represents a node in the route tree.</p>"},{"name":"RouteEnterEvent","qualifiedName":"nuxeo_api_playground/module.RouteEnterEvent"},{"name":"RouteEvent","qualifiedName":"nuxeo_api_playground/module.RouteEvent","preview":"<p>Route enter or leave event.</p>"},{"name":"RouteHandle","qualifiedName":"nuxeo_api_playground/module.RouteHandle","preview":"<p>A helper Router handle that scopes all route event subscriptions to it's\ninstance and provides an convenience <a>nuxeo_api_playground/module.RouteHandle.discard</a> method.</p>"},{"name":"RouteImpl","qualifiedName":"nuxeo_api_playground/module.RouteImpl","preview":"<p>Route is a node in the tree of routes. The edge leading to the route is\ndefined by path.</p>"},{"name":"RouteLeaveEvent","qualifiedName":"nuxeo_api_playground/module.RouteLeaveEvent"},{"name":"RoutePreEnterEvent","qualifiedName":"nuxeo_api_playground/module.RoutePreEnterEvent"},{"name":"RoutePreLeaveEvent","qualifiedName":"nuxeo_api_playground/module.RoutePreLeaveEvent"},{"name":"RouteStartEvent","qualifiedName":"nuxeo_api_playground/module.RouteStartEvent","preview":"<p>Event emitted when routing starts.</p>"},{"name":"Router","qualifiedName":"nuxeo_api_playground/module.Router","preview":"<p>Stores a set of UrlPattern to Handler associations and provides methods\nfor calling a handler for a URL path, listening to <a>nuxeo_api_playground/dart:html.Window</a> history events,\nand creating HTML event handlers that navigate to a URL.</p>"},{"name":"UrlMatch","qualifiedName":"nuxeo_api_playground/module.UrlMatch","preview":"<p>Object representing a successful URL match.</p>"},{"name":"UrlMatcher","qualifiedName":"nuxeo_api_playground/module.UrlMatcher","preview":"<p>A reversible URL matcher interface.</p>"}],"typedef":{"RouteEnterEventHandler":{"name":"RouteEnterEventHandler","qualifiedName":"nuxeo_api_playground/module.RouteEnterEventHandler","comment":"","return":"void","parameters":{"event":{"name":"event","optional":false,"named":false,"default":false,"type":[{"outer":"nuxeo_api_playground/module.RouteEnterEvent","inner":[]}],"value":null,"annotations":[]}},"annotations":[],"generics":{}},"RouteLeaveEventHandler":{"name":"RouteLeaveEventHandler","qualifiedName":"nuxeo_api_playground/module.RouteLeaveEventHandler","comment":"","return":"void","parameters":{"event":{"name":"event","optional":false,"named":false,"default":false,"type":[{"outer":"nuxeo_api_playground/module.RouteLeaveEvent","inner":[]}],"value":null,"annotations":[]}},"annotations":[],"generics":{}},"RoutePreEnterEventHandler":{"name":"RoutePreEnterEventHandler","qualifiedName":"nuxeo_api_playground/module.RoutePreEnterEventHandler","comment":"","return":"void","parameters":{"event":{"name":"event","optional":false,"named":false,"default":false,"type":[{"outer":"nuxeo_api_playground/module.RoutePreEnterEvent","inner":[]}],"value":null,"annotations":[]}},"annotations":[],"generics":{}},"RoutePreLeaveEventHandler":{"name":"RoutePreLeaveEventHandler","qualifiedName":"nuxeo_api_playground/module.RoutePreLeaveEventHandler","comment":"","return":"void","parameters":{"event":{"name":"event","optional":false,"named":false,"default":false,"type":[{"outer":"nuxeo_api_playground/module.RoutePreLeaveEvent","inner":[]}],"value":null,"annotations":[]}},"annotations":[],"generics":{}}},"error":[]},"packageName":"nuxeo_api_playground","packageIntro":"<h2>Nuxeo API Playground</h2>\n<p>A Nuxeo API Playground application built with <a href=\"https://www.dartlang.org/\">Dart</a> and <a href=\"https://www.dartlang.org/polymer-dart\">Polymer.dart</a>.</p>\n<h2>About Nuxeo</h2>\n<p>Nuxeo provides a modular, extensible Java-based <a href=\"http://www.nuxeo.com/en/products/ep\">open source software platform for enterprise content management</a> and packaged applications for <a href=\"http://www.nuxeo.com/en/products/document-management\">document management</a>, <a href=\"http://www.nuxeo.com/en/products/dam\">digital asset management</a> and <a href=\"http://www.nuxeo.com/en/products/case-management\">case management</a>. Designed by developers for developers, the Nuxeo platform offers a modern architecture, a powerful plug-in model and extensive packaging capabilities for building content applications.</p>\n<p>More information on: <a href=\"http://www.nuxeo.com/\">http://www.nuxeo.com/</a></p>"}