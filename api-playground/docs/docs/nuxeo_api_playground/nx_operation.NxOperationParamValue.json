{"name":"NxOperationParamValue","qualifiedName":"nuxeo_api_playground/nx_operation.NxOperationParamValue","comment":"<p>Wrapper for <a>nuxeo_api_playground/nuxeo_client.OperationParam</a></p>","isAbstract":false,"superclass":"dart:core.Object","implements":["dart:core.Comparable"],"subclass":[],"variables":{"value":{"name":"value","qualifiedName":"nuxeo_api_playground/nx_operation.NxOperationParamValue.value","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dynamic","inner":[]}],"annotations":[{"name":"nuxeo_api_playground/observe-src-metadata.observable","parameters":[]}]}},"inheritedVariables":{},"methods":{"setters":{},"getters":{"dataType":{"name":"dataType","qualifiedName":"nuxeo_api_playground/nx_operation.NxOperationParamValue.dataType","comment":"","commentFrom":"nx_operation.NxOperationParamValue.dataType","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart:core.String","inner":[]}],"parameters":{},"annotations":[]},"isValid":{"name":"isValid","qualifiedName":"nuxeo_api_playground/nx_operation.NxOperationParamValue.isValid","comment":"","commentFrom":"nx_operation.NxOperationParamValue.isValid","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart:core.bool","inner":[]}],"parameters":{},"annotations":[]},"name":{"name":"name","qualifiedName":"nuxeo_api_playground/nx_operation.NxOperationParamValue.name","comment":"","commentFrom":"nx_operation.NxOperationParamValue.name","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart:core.String","inner":[]}],"parameters":{},"annotations":[]},"options":{"name":"options","qualifiedName":"nuxeo_api_playground/nx_operation.NxOperationParamValue.options","comment":"","commentFrom":"nx_operation.NxOperationParamValue.options","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart:core.List","inner":[]}],"parameters":{},"annotations":[]},"required":{"name":"required","qualifiedName":"nuxeo_api_playground/nx_operation.NxOperationParamValue.required","comment":"","commentFrom":"nx_operation.NxOperationParamValue.required","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart:core.bool","inner":[]}],"parameters":{},"annotations":[]},"widget":{"name":"widget","qualifiedName":"nuxeo_api_playground/nx_operation.NxOperationParamValue.widget","comment":"","commentFrom":"nx_operation.NxOperationParamValue.widget","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart:core.String","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{"":{"name":"","qualifiedName":"nuxeo_api_playground/nx_operation.NxOperationParamValue.NxOperationParamValue-","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"_param":{"name":"_param","optional":false,"named":false,"default":false,"type":[{"outer":"nuxeo_client.OperationParam","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"operators":{},"methods":{"compareTo":{"name":"compareTo","qualifiedName":"nuxeo_api_playground/nx_operation.NxOperationParamValue.compareTo","comment":"<p>Compares this object to another <a>dart:core.Comparable</a></p>\n<p>Returns a value like a <a>dart:core.Comparator</a> when comparing <code>this</code> to <a>nuxeo_api_playground/nx_operation.NxOperationParamValue.compareTo.other</a>.\nThat is, it returns a negative integer if <code>this</code> is ordered before <a>nuxeo_api_playground/nx_operation.NxOperationParamValue.compareTo.other</a>,\na positive integer if <code>this</code> is ordered after <a>nuxeo_api_playground/nx_operation.NxOperationParamValue.compareTo.other</a>,\nand zero if <code>this</code> and <a>nuxeo_api_playground/nx_operation.NxOperationParamValue.compareTo.other</a> are ordered together.</p>\n<p>The <a>nuxeo_api_playground/nx_operation.NxOperationParamValue.compareTo.other</a> argument must be a value that is comparable to this object.</p>","commentFrom":"dart:core.Comparable.compareTo","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart:core.int","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"nuxeo_api_playground/nx_operation.NxOperationParamValue","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"nuxeo_api_playground/nx_operation.NxOperationParamValue.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>nuxeo_api_playground/nx_operation.NxOperationParamValue.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart:core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart:core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"nuxeo_api_playground/nx_operation.NxOperationParamValue.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart:core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart:core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"nuxeo_api_playground/nx_operation.NxOperationParamValue.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart:core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>nuxeo_api_playground/nx_operation.NxOperationParamValue.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>nuxeo_api_playground/nx_operation.NxOperationParamValue.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart:core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart:core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"methods":{"compareTo":{"name":"compareTo","qualifiedName":"nuxeo_api_playground/nx_operation.NxOperationParamValue.compareTo","comment":"<p>Compares this object to another <a>dart:core.Comparable</a></p>\n<p>Returns a value like a <a>dart:core.Comparator</a> when comparing <code>this</code> to <a>nuxeo_api_playground/nx_operation.NxOperationParamValue.compareTo.other</a>.\nThat is, it returns a negative integer if <code>this</code> is ordered before <a>nuxeo_api_playground/nx_operation.NxOperationParamValue.compareTo.other</a>,\na positive integer if <code>this</code> is ordered after <a>nuxeo_api_playground/nx_operation.NxOperationParamValue.compareTo.other</a>,\nand zero if <code>this</code> and <a>nuxeo_api_playground/nx_operation.NxOperationParamValue.compareTo.other</a> are ordered together.</p>\n<p>The <a>nuxeo_api_playground/nx_operation.NxOperationParamValue.compareTo.other</a> argument must be a value that is comparable to this object.</p>","commentFrom":"","inheritedFrom":"dart:core.Comparable.compareTo","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart:core.int","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dart:core.Comparable.T","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"nuxeo_api_playground/nx_operation.NxOperationParamValue.noSuchMethod","comment":"<p><a>nuxeo_api_playground/nx_operation.NxOperationParamValue.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>nuxeo_api_playground/nx_operation.NxOperationParamValue.noSuchMethod</a> in an <a>dart:core.Invocation</a>.\nIf <a>nuxeo_api_playground/nx_operation.NxOperationParamValue.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>nuxeo_api_playground/nx_operation.NxOperationParamValue.noSuchMethod</a> is to throw a\n<a>dart:core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart:core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart:core.Invocation","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"toString":{"name":"toString","qualifiedName":"nuxeo_api_playground/nx_operation.NxOperationParamValue.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart:core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart:core.String","inner":[]}],"parameters":{},"annotations":[]}}},"annotations":[],"generics":{}}